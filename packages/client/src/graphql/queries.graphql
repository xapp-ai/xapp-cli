query getProfile {
  profile {
    email
  }
}

query getOrgs {
  orgs(size:10) {
    total
    orgs {
      organizationId
      name
    }
  }
}

query getOrgAnalytics($orgId: ID!, $startDate: DateTime!, $endDate: DateTime!) {
  org(organizationId: $orgId) {
    _id
    __typename
    name
    analytics {
      user(start: $startDate, end: $endDate) {
        newUsers
        returningUsers
        totalSessions
        totalUsers
      }
    }
  }
}

query getAppsForOrg(
  $organizationId: ID!
  $from: Int = 0
  $size: Int = 10
  $byStatusType: [String]
) {
  org(organizationId: $organizationId) {
    apps(from: $from, size: $size, byStatusType: $byStatusType) {
      total
      apps {
        appId
        organizationId
        name
        largeIcon
        smallIcon
        description
        summary
        website
        status {
          type
          timestamp
          notes
          email
        }
      }
    }
  }
}

query getAppOverview(
  $appId: ID!
  $start: DateTime!
  $end: DateTime!
  $env: [String]
) {
  app(appId: $appId) {
    __typename
    _id
    appId
    name
    description
    summary
    organizationId
    invocationName
    templateType
    icon
    smallIcon
    largeIcon
    banner
    largeBanner
    website
    businessDescription
    businessHighValueLeadDescription
    location {
      geocode {
        latitude
        longitude
      }
      streetAddress
    }
    places {
      name
      placeId
      formattedAddress
      address
      addressComponents {
        types
        longName
        shortName
      }
      website
      phone
      bookingOptOut
      adminVerified
    }
    status {
      type
      timestamp
      email
      statusHistory {
        type
        email
        timestamp
        notes
      }
    }
    handlers(size: 1000) {
      _id
      total
      handlers {
        _id
        name
        intentId
        type
      }
    }
    intents(size: 1000) {
      _id
      total
      intents {
        _id
        name
        intentId
      }
    }
    entities(size: 1000) {
      _id
      total
      entities {
        _id
        entityId
        displayName
      }
    }
    content {
      __typename
      total
      content {
        __typename
        _id
        name
        url
      }
    }
    contentSources {
      __typename
      total
      sources {
        __typename
        webUrl
        webUrlPatterns
      }
    }
    faq {
      total
    }
    channels {
      __typename
      type
      id
      name
      ... on ChatWidgetAppChannel {
        key
        theme {
          primaryColor
        }
      }
      ... on IntelligentSearchAppChannel {
        key
        theme {
          accentColor
        }
      }
    }
    analytics {
      user(start: $start, end: $end, byEnvironment: $env) {
        totalUsers
        totalSessions
        returningUsers
        newUsers
      }
    }
  }
}

query getAppContent($appId: ID!, $size: Int!, $from: Int!) {
  app(appId: $appId) {
    appId
    contentSources {
      __typename
      total
      sources {
        __typename
        webUrl
        webUrlPatterns
      }
    }
    content(size: $size, from: $from) {
      total
      content {
        _id
        name
        url
        type
        lastUpdated
        text
      }
    }
    faq(size: $size, from: $from) {
      total
      faq {
        name
        raw
        answer
        questions
      }
    }
  }
}

query getAppAnalytics($appId: ID!, $startDate: DateTime!, $endDate: DateTime!) {
  app(appId: $appId) {
    _id
    __typename
    name
    analytics {
      user(start: $startDate, end: $endDate) {
        newUsers
        returningUsers
        totalSessions
        totalUsers
      }
    }
  }
}

query getAppSchedules($appId: ID!) {
  app(appId: $appId) {
    schedules {
      schedules {
        scheduleId
        type
        event
        parameters
      }
    }
  }
}

query getAnalyticsAndEvents(
  $appId: ID!
  $startDate: DateTime!
  $endDate: DateTime!
  $byTag: [String]
  $byRequestIntentId: [String]
  $byChannel: [String]
) {
  app(appId: $appId) {
    _id
    __typename
    appId
    name
    analytics {
      user(start: $startDate, end: $endDate) {
        newUsers
        returningUsers
        totalSessions
        totalUsers
      }
    }
    events(
      startDate: $startDate
      endDate: $endDate
      byTag: $byTag
      byRequestIntentId: $byRequestIntentId
      byChannel: $byChannel
    ) {
      total
    }
  }
}

query getEvents(
  $appId: ID!
  $startDate: DateTime!
  $endDate: DateTime!
  $size: Int = 10
  $from: Int = 0
  $byTag: [String]
  $byRequestIntentId: [String]
  $byChannel: [String]
  $byEnv: [String]
) {
  app(appId: $appId) {
    _id
    __typename
    appId
    name
    events(
      size: $size
      from: $from
      startDate: $startDate
      endDate: $endDate
      byTag: $byTag
      byRequestIntentId: $byRequestIntentId
      byChannel: $byChannel
      byEnvironment: $byEnv
    ) {
      total
      events {
        eventId
        channel
        platform
        userId
        sessionId
        eventTime
        currentHandler
        selectedHandler
        environment
        eventType
        eventName
        request
        slots {
          name
          rawValue
          slotValue
        }
        stentorRequest {
          intentId
          rawQuery
          matchConfidence
        }
        response {
          outputSpeech {
            displayText
            ssml
            suggestions {
              title
              url
            }
          }
          displays
          reprompt {
            displayText
            ssml
            suggestions {
              title
              url
            }
          }
        }
        rawQuery
        errorCode
        errorMessage
        payload
      }
    }
  }
}

query getAppChannel($appId: ID!, $channelId: ID!) {
  app(appId: $appId) {
    __typename
    appId
    organizationId
    invocationName
    channel(id: $channelId) {
      __typename
      type
      name
      id
      directoryListing
      endPoint
      status {
        type
      }
      useNLU
      ... on DialogflowAppChannel {
        hasCredentials
        additionalInformationQuestions {
          intendedForUnderThirteen
          alcoholAndTobaccoRelatedContent
        }
      }
      ... on AlexaAppChannel {
        invocationName
        hasCredentials
        skillId
        vendorId
        category
        distributionMode
        isAvailableWorldwide
        distributionCountries
        permissions {
          name
        }
        vendors {
          id
          name
          roles
        }
        useManifest
        privacyAndCompliance {
          allowsPurchases
          containsAds
          isChildDirected
          isExportCompliant
          usesPersonalInfo
        }
      }
      ... on ActionsOnGoogleAppChannel {
        hasCredentials
        additionalInformationQuestions {
          intendedForUnderThirteen
          alcoholAndTobaccoRelatedContent
        }
      }
      ... on LexConnectAppChannel {
        voiceId
        nluIntentConfidenceThreshold
        idleSessionTTLInSeconds
        detectSentiment
        isLinkedToKendra
        lexPostTextUrl
        enableModelImprovements
        botName
      }
      ... on LexV2ConnectAppChannel {
        voiceId
        idleSessionTTLInSeconds
        detectSentiment
        isLinkedToKendra
        lexPostTextUrl
        enableModelImprovements
        botId
        botName
        botRegion
        lexFulfillmentLambdaARN
        managementRole
        managementRoleExternalId
      }
      ... on ChatWidgetAppChannel {
        cta {
          message
          timeout
          delay
          animation
          animationTimeout
          mobile {
            applyAtLessThanWidth
            message
            timeout
            delay
            animation
            animationTimeout
          }
        }
        name
        direct
        disabled
        accountKey
        botName
        avatarUrl
        key
        menu {
          menuButtonLocation
          items {
            ... on ChatWidgetMenuItemConfig {
              label
              subtitle
            }
            ... on ChatWidgetMenuItemStaticText {
              title
              body
            }
            ... on ChatWidgetMenuItemStaticImage {
              imageUrl
            }
            ... on ChatWidgetMenuItemOpenURL {
              url
              text
              behavior {
                type
                ... on ChatWidgetAppChannelUrlBehaviorNewWindow {
                  width
                  height
                }
              }
            }
          }
          itemsTabIndex
          button {
            tabIndex
          }
        }
        serverUrl
        middlewareUrl
        autocompleteSuggestionsUrl
        configurableMessages {
          items {
            delay
            text
          }
        }
        urls {
          policies {
            pattern
            behavior {
              type
              ... on ChatWidgetAppChannelUrlBehaviorNewWindow {
                width
                height
              }
            }
          }
          defaultBehavior {
            type
            ... on ChatWidgetAppChannelUrlBehaviorNewWindow {
              width
              height
            }
          }
        }
        autoOpenOnWidth
        autoOpenOnPattern {
          minimumWidth
          patterns
        }
        chatButton {
          tabIndex
        }
        header {
          status {
            online
            offline
            away
            connecting
          }
          subtitle {
            enabled
            text
          }
          actions {
            refresh
            refreshTabIndex
            minimize
            minimizeTabIndex
            cancel
            cancelTabIndex
          }
          alignTextCenter
        }
        footer {
          branding {
            enabled
            text
          }
          sendButton {
            icon
            tabIndex
          }
          clearButton {
            tabIndex
          }
        }
        typingStatus {
          textTypingStatusEnabled
        }
        theme {
          border {
            color
            width
            radius
          }
          carousel {
            button {
              color
            }
            subtitle {
              color
              fontFamily
              fontSize
              fontWeight
            }
            title {
              color
              fontFamily
              fontSize
              fontWeight
            }
          }
          chatButton {
            background
            margin {
              top
              right
              bottom
              left
            }
          }
          content {
            background
          }
          cta {
            background
            text {
              color
              fontFamily
              fontSize
            }
          }
          footer {
            background
            border {
              color
              radius
              width
            }
            branding {
              text {
                color
                fontFamily
                fontSize
                fontStyle
                fontWeight
              }
            }
          }
          header {
            background
            border {
              color
              radius
              width
            }
            text {
              color
              fontFamily
              fontSize
              fontStyle
              fontWeight
            }
            subtitle {
              color
              fontFamily
              fontSize
              fontStyle
              fontWeight
            }
          }
          input {
            background
            border {
              color
              width
              radius
            }
            text {
              color
              fontFamily
              fontSize
            }
            placeholder {
              color
              fontFamily
              fontSize
              fontWeight
              fontStyle
            }
          }
          menu {
            item {
              height
              background
              text {
                color
                fontSize
                fontFamily
                fontWeight
                fontStyle
              }
            }
          }
          menuButton {
            color
          }
          messages {
            mine {
              bubbleColor
              text {
                color
                fontSize
                fontFamily
                fontWeight
                fontStyle
              }
            }
            others {
              bubbleColor
              text {
                color
                fontSize
                fontFamily
                fontWeight
                fontStyle
              }
            }
            padding {
              left
              right
              bottom
              top
            }
            maxWidth
          }
          minimizeButton {
            color
          }
          cancelButton {
            color
          }
          refreshButton {
            color
          }
          primaryColor
          zIndex
          sendButton {
            color
            width
          }
          size {
            width
            height
          }
          textTypingStatus {
            text {
              color
              fontFamily
              fontSize
              fontStyle
              fontWeight
            }
          }
        }
        input {
          placeholder
        }
        connection {
          type
          serverUrl
        }
      }
      ... on IntelligentSearchAppChannel {
        type
        name
        key
        autocompleteSuggestionsUrl
        connection {
          serverUrl
        }
        theme {
          accentColor
          border {
            color
            width
            radius
            style
          }
          card {
            background
            border {
              color
              width
              radius
              style
            }
            description {
              margin {
                bottom
                left
                right
                top
              }
              padding {
                bottom
                left
                right
                top
              }
              text {
                color
                fontFamily
                fontSize
                fontStyle
                fontWeight
                lineHeight
              }
            }
            link {
              margin {
                bottom
                left
                right
                top
              }
              padding {
                bottom
                left
                right
                top
              }
              text {
                default {
                  color
                  fontFamily
                  fontSize
                  fontStyle
                  fontWeight
                  lineHeight
                }
              }
            }
            margin {
              bottom
              left
              right
              top
            }
            padding {
              bottom
              left
              right
              top
            }
            title {
              margin {
                bottom
                left
                right
                top
              }
              padding {
                bottom
                left
                right
                top
              }
              text {
                color
                fontFamily
                fontSize
                fontStyle
                fontWeight
                lineHeight
              }
            }
          }
          carousel {
            card {
              background
              border {
                color
                width
                radius
                style
              }
              description {
                margin {
                  bottom
                  left
                  right
                  top
                }
                padding {
                  bottom
                  left
                  right
                  top
                }
                text {
                  color
                  fontFamily
                  fontSize
                  fontStyle
                  fontWeight
                  lineHeight
                }
              }
              link {
                margin {
                  bottom
                  left
                  right
                  top
                }
                padding {
                  bottom
                  left
                  right
                  top
                }
                text {
                  default {
                    color
                    fontFamily
                    fontSize
                    fontStyle
                    fontWeight
                    lineHeight
                  }
                }
              }
              margin {
                bottom
                left
                right
                top
              }
              padding {
                bottom
                left
                right
                top
              }
              title {
                margin {
                  bottom
                  left
                  right
                  top
                }
                padding {
                  bottom
                  left
                  right
                  top
                }
                text {
                  color
                  fontFamily
                  fontSize
                  fontStyle
                  fontWeight
                  lineHeight
                }
              }
            }
          }
          list {
            card {
              background
              border {
                color
                width
                radius
                style
              }
              description {
                margin {
                  bottom
                  left
                  right
                  top
                }
                padding {
                  bottom
                  left
                  right
                  top
                }
                text {
                  color
                  fontFamily
                  fontSize
                  fontStyle
                  fontWeight
                  lineHeight
                }
              }
              link {
                margin {
                  bottom
                  left
                  right
                  top
                }
                padding {
                  bottom
                  left
                  right
                  top
                }
                text {
                  default {
                    color
                    fontFamily
                    fontSize
                    fontStyle
                    fontWeight
                    lineHeight
                  }
                }
              }
              margin {
                bottom
                left
                right
                top
              }
              padding {
                bottom
                left
                right
                top
              }
              title {
                margin {
                  bottom
                  left
                  right
                  top
                }
                padding {
                  bottom
                  left
                  right
                  top
                }
                text {
                  color
                  fontFamily
                  fontSize
                  fontStyle
                  fontWeight
                  lineHeight
                }
              }
            }
          }
          messages {
            others {
              bubble {
                background
              }
              text {
                color
                fontFamily
                fontSize
                fontStyle
                fontWeight
                lineHeight
              }
            }
          }
        }
      }
      ... on AppChannel {
        id
        type
      }
      ... on FormWidgetAppChannel {
        type
        name
        id
        autoGreeting
        directoryListing
        useNLU
        connection {
          serverUrl
          accountKey
        }
        theme {
          accentColor
        }
        attributes
      }
    }
  }
}
